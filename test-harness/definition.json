{
    "metadata": {
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "title": "Swagger Petstore",
        "baseUrl": "http://petstore.swagger.io/v2/"
    },
    "services": {
        "pet": {
            "addPet": {
                "description": "Add a new pet to the store",
                "description2": "",
                "path": "/pet",
                "verb": "post",
                "parameters": [
                    {
                        "name": "body",
                        "type": "body",
                        "description": "Pet object that needs to be added to the store",
                        "required": true,
                        "dataType": {
                            "complex": "Pet"
                        }
                    }
                ],
                "responses": {
                    "405": {}
                }
            },
            "updatePet": {
                "description": "Update an existing pet",
                "description2": "",
                "path": "/pet",
                "verb": "put",
                "parameters": [
                    {
                        "name": "body",
                        "type": "body",
                        "description": "Pet object that needs to be added to the store",
                        "required": true,
                        "dataType": {
                            "complex": "Pet"
                        }
                    }
                ],
                "responses": {
                    "400": {},
                    "404": {},
                    "405": {}
                }
            },
            "findPetsByStatus": {
                "description": "Finds Pets by status",
                "description2": "Multiple status values can be provided with comma separated strings",
                "path": "/pet/findByStatus",
                "verb": "get",
                "parameters": [
                    {
                        "name": "status",
                        "type": "query",
                        "description": "Status values that need to be considered for filter",
                        "required": true,
                        "dataType": {
                            "isArray": true,
                            "enum": "status_Pet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "isArray": true,
                            "complex": "Pet"
                        }
                    },
                    "400": {}
                }
            },
            "findPetsByTags": {
                "description": "Finds Pets by tags",
                "description2": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                "path": "/pet/findByTags",
                "verb": "get",
                "parameters": [
                    {
                        "name": "tags",
                        "type": "query",
                        "description": "Tags to filter by",
                        "required": true,
                        "dataType": {
                            "isArray": true,
                            "primitive": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "isArray": true,
                            "complex": "Pet"
                        }
                    },
                    "400": {}
                }
            },
            "getPetById": {
                "description": "Find pet by ID",
                "description2": "Returns a single pet",
                "path": "/pet/{petId}",
                "verb": "get",
                "parameters": [
                    {
                        "name": "petId",
                        "type": "path",
                        "description": "ID of pet to return",
                        "required": true,
                        "dataType": {
                            "primitive": "integer",
                            "subType": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "complex": "Pet"
                        }
                    },
                    "400": {},
                    "404": {}
                }
            },
            "updatePetWithForm": {
                "description": "Updates a pet in the store with form data",
                "description2": "",
                "path": "/pet/{petId}",
                "verb": "post",
                "parameters": [
                    {
                        "name": "petId",
                        "type": "path",
                        "description": "ID of pet that needs to be updated",
                        "required": true,
                        "dataType": {
                            "primitive": "integer",
                            "subType": "int64"
                        }
                    },
                    {
                        "name": "name",
                        "type": "formData",
                        "description": "Updated name of the pet",
                        "required": false,
                        "dataType": {
                            "primitive": "string"
                        }
                    },
                    {
                        "name": "status",
                        "type": "formData",
                        "description": "Updated status of the pet",
                        "required": false,
                        "dataType": {
                            "primitive": "string"
                        }
                    }
                ],
                "responses": {
                    "405": {}
                }
            },
            "deletePet": {
                "description": "Deletes a pet",
                "description2": "",
                "path": "/pet/{petId}",
                "verb": "delete",
                "parameters": [
                    {
                        "name": "api_key",
                        "type": "header",
                        "required": false,
                        "dataType": {
                            "primitive": "string"
                        }
                    },
                    {
                        "name": "petId",
                        "type": "path",
                        "description": "Pet id to delete",
                        "required": true,
                        "dataType": {
                            "primitive": "integer",
                            "subType": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {},
                    "404": {}
                }
            },
            "uploadFile": {
                "description": "uploads an image",
                "description2": "",
                "path": "/pet/{petId}/uploadImage",
                "verb": "post",
                "parameters": [
                    {
                        "name": "petId",
                        "type": "path",
                        "description": "ID of pet to update",
                        "required": true,
                        "dataType": {
                            "primitive": "integer",
                            "subType": "int64"
                        }
                    },
                    {
                        "name": "additionalMetadata",
                        "type": "formData",
                        "description": "Additional data to pass to server",
                        "required": false,
                        "dataType": {
                            "primitive": "string"
                        }
                    },
                    {
                        "name": "file",
                        "type": "formData",
                        "description": "file to upload",
                        "required": false,
                        "dataType": {
                            "primitive": "file"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "complex": "ApiResponse"
                        }
                    }
                }
            }
        },
        "store": {
            "getInventory": {
                "description": "Returns pet inventories by status",
                "description2": "Returns a map of status codes to quantities",
                "path": "/store/inventory",
                "verb": "get",
                "parameters": [],
                "responses": {
                    "200": {
                        "dataType": {
                            "primitive": "object"
                        }
                    }
                }
            },
            "placeOrder": {
                "description": "Place an order for a pet",
                "description2": "",
                "path": "/store/order",
                "verb": "post",
                "parameters": [
                    {
                        "name": "body",
                        "type": "body",
                        "description": "order placed for purchasing the pet",
                        "required": true,
                        "dataType": {
                            "complex": "Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "complex": "Order"
                        }
                    },
                    "400": {}
                }
            },
            "getOrderById": {
                "description": "Find purchase order by ID",
                "description2": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
                "path": "/store/order/{orderId}",
                "verb": "get",
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "path",
                        "description": "ID of pet that needs to be fetched",
                        "required": true,
                        "dataType": {
                            "primitive": "integer",
                            "subType": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "complex": "Order"
                        }
                    },
                    "400": {},
                    "404": {}
                }
            },
            "deleteOrder": {
                "description": "Delete purchase order by ID",
                "description2": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",
                "path": "/store/order/{orderId}",
                "verb": "delete",
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "path",
                        "description": "ID of the order that needs to be deleted",
                        "required": true,
                        "dataType": {
                            "primitive": "integer",
                            "subType": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {},
                    "404": {}
                }
            }
        },
        "user": {
            "createUser": {
                "description": "Create user",
                "description2": "This can only be done by the logged in user.",
                "path": "/user",
                "verb": "post",
                "parameters": [
                    {
                        "name": "body",
                        "type": "body",
                        "description": "Created user object",
                        "required": true,
                        "dataType": {
                            "complex": "User"
                        }
                    }
                ],
                "responses": {
                    "default": {}
                }
            },
            "createUsersWithArrayInput": {
                "description": "Creates list of users with given input array",
                "description2": "",
                "path": "/user/createWithArray",
                "verb": "post",
                "parameters": [
                    {
                        "name": "body",
                        "type": "body",
                        "description": "List of user object",
                        "required": true,
                        "dataType": {
                            "isArray": true,
                            "complex": "User"
                        }
                    }
                ],
                "responses": {
                    "default": {}
                }
            },
            "createUsersWithListInput": {
                "description": "Creates list of users with given input array",
                "description2": "",
                "path": "/user/createWithList",
                "verb": "post",
                "parameters": [
                    {
                        "name": "body",
                        "type": "body",
                        "description": "List of user object",
                        "required": true,
                        "dataType": {
                            "isArray": true,
                            "complex": "User"
                        }
                    }
                ],
                "responses": {
                    "default": {}
                }
            },
            "loginUser": {
                "description": "Logs user into the system",
                "description2": "",
                "path": "/user/login",
                "verb": "get",
                "parameters": [
                    {
                        "name": "username",
                        "type": "query",
                        "description": "The user name for login",
                        "required": true,
                        "dataType": {
                            "primitive": "string"
                        }
                    },
                    {
                        "name": "password",
                        "type": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "dataType": {
                            "primitive": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "primitive": "string"
                        }
                    },
                    "400": {}
                }
            },
            "logoutUser": {
                "description": "Logs out current logged in user session",
                "description2": "",
                "path": "/user/logout",
                "verb": "get",
                "parameters": [],
                "responses": {
                    "default": {}
                }
            },
            "getUserByName": {
                "description": "Get user by user name",
                "description2": "",
                "path": "/user/{username}",
                "verb": "get",
                "parameters": [
                    {
                        "name": "username",
                        "type": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "dataType": {
                            "primitive": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "dataType": {
                            "complex": "User"
                        }
                    },
                    "400": {},
                    "404": {}
                }
            },
            "updateUser": {
                "description": "Updated user",
                "description2": "This can only be done by the logged in user.",
                "path": "/user/{username}",
                "verb": "put",
                "parameters": [
                    {
                        "name": "username",
                        "type": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "dataType": {
                            "primitive": "string"
                        }
                    },
                    {
                        "name": "body",
                        "type": "body",
                        "description": "Updated user object",
                        "required": true,
                        "dataType": {
                            "complex": "User"
                        }
                    }
                ],
                "responses": {
                    "400": {},
                    "404": {}
                }
            },
            "deleteUser": {
                "description": "Delete user",
                "description2": "This can only be done by the logged in user.",
                "path": "/user/{username}",
                "verb": "delete",
                "parameters": [
                    {
                        "name": "username",
                        "type": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "dataType": {
                            "primitive": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {},
                    "404": {}
                }
            }
        }
    },
    "models": {
        "Order": {
            "id": {
                "primitive": "integer",
                "subType": "int64",
                "required": false
            },
            "petId": {
                "primitive": "integer",
                "subType": "int64",
                "required": false
            },
            "quantity": {
                "primitive": "integer",
                "subType": "int32",
                "required": false
            },
            "shipDate": {
                "primitive": "string",
                "subType": "date-time",
                "required": false
            },
            "status": {
                "enum": "status_Order",
                "required": false
            },
            "complete": {
                "primitive": "boolean",
                "required": false
            }
        },
        "Category": {
            "id": {
                "primitive": "integer",
                "subType": "int64",
                "required": false
            },
            "name": {
                "primitive": "string",
                "required": false
            }
        },
        "User": {
            "id": {
                "primitive": "integer",
                "subType": "int64",
                "required": false
            },
            "username": {
                "primitive": "string",
                "required": false
            },
            "firstName": {
                "primitive": "string",
                "required": false
            },
            "lastName": {
                "primitive": "string",
                "required": false
            },
            "email": {
                "primitive": "string",
                "required": false
            },
            "password": {
                "primitive": "string",
                "required": false
            },
            "phone": {
                "primitive": "string",
                "required": false
            },
            "userStatus": {
                "primitive": "integer",
                "subType": "int32",
                "required": false
            }
        },
        "Tag": {
            "id": {
                "primitive": "integer",
                "subType": "int64",
                "required": false
            },
            "name": {
                "primitive": "string",
                "required": false
            }
        },
        "ApiResponse": {
            "code": {
                "primitive": "integer",
                "subType": "int32",
                "required": false
            },
            "type": {
                "primitive": "string",
                "required": false
            },
            "message": {
                "primitive": "string",
                "required": false
            }
        },
        "Pet": {
            "id": {
                "primitive": "integer",
                "subType": "int64",
                "required": false
            },
            "category": {
                "complex": "Category",
                "required": false
            },
            "name": {
                "primitive": "string",
                "required": true
            },
            "photoUrls": {
                "isArray": true,
                "primitive": "string",
                "required": true
            },
            "tags": {
                "isArray": true,
                "complex": "Tag",
                "required": false
            },
            "status": {
                "enum": "status_Pet",
                "required": false
            }
        }
    },
    "enums": {
        "status_Order": [
            "placed",
            "approved",
            "delivered"
        ],
        "status_Pet": [
            "available",
            "pending",
            "sold"
        ]
    }
}
